lsblk                                  						   # find which drive to install on 
ls /sys/firmware/efi/efivars           						   # OPTIONAL: check for uefi; if no file, no efi
ping google.com                        						   # check for internet
wifi-menu                              						   # OPTIONAL: if no ethernet, look for wifi
timedatectl set-ntp true               						   # configures clock
fdisk /${DRIVE}                        						   # tool used for partitioning
.                                      						   # partition 1 (primary BOOT): +200M
.                                      						   # partition 2 (primary SWAP): ${150% RAM}
.                                      						   # partition 3 (primary ROOT): +[~25G] 
.                                      						   # partition 4 (primary HOME): ${REST OF SPACE}
.                                      						   # write changes
mkfs.ext4 $[BOOT, ROOT, HOME]          						   # create filesystems for partitions
mkswap ${SWAP}                         						   # swap setup
swapon ${SWAP}                         						   # swap enable
mount ${ROOT} /mnt                     						   # mount root partition
mkdir /mnt/home /mnt/boot              						   # make directories for boot and home partitions
mount ${BOOT} /mnt/boot                						   # mount boot partition
mount ${HOME} /mnt/home                						   # mount home partition
pacstrap /mnt base base-devel linux linux-firmware vim      # Arch Linux install script
genfstab -U /mnt >> /mnt/etc/fstab                          # tells Linux what partition to boot
arch-chroot /mnt                                            # move to new Arch installation
pacman -S networkmanager grub                               # install Network Manager for automated internet access
.                                                           # install grub boot loader
systemctl enable NetworkManager                             # start Network Manager on startup
grub-install --target=i386-pc /${DRIVE}                     # installs grub
grub-mkconfig -o /boot/grub/grub.cfg                        # configure grub boot
passwd                                                      # set root password
vim /etc/locale.gen                                         # uncomment both "en_US" lines
locale-gen                                                  # creates locales
vim /etc/locale.conf                                        # write "LANG=en-US.UTF-8"
ln -sf /usr/share/zoneinfo/America/New_York /etc/localtime  # link time zone
vim /etc/hostname                                           # write a name for the system
exit                                                        # return to install drive
umount -R /mnt                                              # unmounts the install drive
reboot
vim /etc/sudoers                                            # write "Defaults !tty_tickets" (no retyping password)
pacman -S xorg-server xorg-init noto-fonts                  # set up for graphical environment
.                                                           # install a graphical environment
vim ~/.xinitrc                                              # write "exec ${name of graphical environment}
startx
.                                                           # if error in graphical environment, press CTRL+ALT+F(2-3-4) to return to tty
sudo pacman -S lightdm lightdm-gtk-greeter                  # for login screen
sudo systemctl enable lightdm.service
